attr global userattr cmdIcon devStateIcon devStateStyle icon sortby webCmd widgetOverride
attr global autoload_undefined_devices 1
attr global backup_before_update 0
attr global logfile ./log/fhem-%Y-%m.log
attr global modpath .
attr global motd none
attr global statefile ./log/fhem.save
attr global updateInBackground 1
attr global verbose 3

define telnetPort telnet 7072 global

define WEB FHEMWEB 8083 global

define WEBphone FHEMWEB 8084 global
attr WEBphone stylesheetPrefix smallscreen

define WEBtablet FHEMWEB 8085 global
attr WEBtablet stylesheetPrefix touchpad

# Fake FileLog entry, to access the fhem log from FHEMWEB 
define Logfile FileLog ./log/fhem-%Y-%m.log fakelog

define autocreate autocreate
attr autocreate filelog ./log/%NAME-%Y.log

define eventTypes eventTypes ./log/eventTypes.txt

# Disable this to avoid looking for new USB devices on startup
define initialUsbCheck notify global:INITIALIZED usb create
define mqtt MQTT 192.168.12.1:1883
define mqtt_lock MQTT_DEVICE
attr mqtt_lock IODev mqtt
attr mqtt_lock publishSet on off lock/relay/set
attr mqtt_lock stateFormat transmission-state
attr mqtt_lock subscribeReading_state lock/relay
define mqtt_button MQTT_DEVICE
attr mqtt_button IODev mqtt
attr mqtt_button event-on-change-reading state
attr mqtt_button stateFormat transmission-state
attr mqtt_button subscribeReading_state button/lower
define button_unlock notify mqtt_button:pressed set mqtt_lock on
define button_lock notify mqtt_button:depressed set mqtt_lock off
define mqtt_temp MQTT_DEVICE
attr mqtt_temp IODev mqtt
attr mqtt_temp event-on-change-reading temp
attr mqtt_temp stateFormat transmission-state
attr mqtt_temp subscribeReading_temp tempchan/temperature
define temp_ac notify mqtt_temp {\
if($EVTPART1 > 25){\
fhem "set mqtt_ac1 on"\
} else {\
fhem "set mqtt_ac1 off"\
}\
}
define kodi KODI 127.0.0.1 tcp
attr kodi event-on-change-reading playStatus
attr kodi updateInterval 60
define kodi_dim_lights notify kodi {\
 if($EVTPART0 eq "playStatus:") {\
    if($EVTPART1 eq "playing"){\
      fhem "set mqtt_light1 off";;\
      fhem "set mqtt_light2 off";;\
      fhem "set mqtt_light3 off";;\
    } else {\
      fhem "set mqtt_light1 on";;\
      fhem "set mqtt_light2 on";;\
      fhem "set mqtt_light3 on";;\
    }\
  }\
}

# define mqtt_led MQTT_DEVICE
# attr mqtt_led IODev mqtt
# attr mqtt_led publishSet on off led/1/set
# attr mqtt_led publishSet_color led/1/rgb/set
# attr mqtt_led stateFormat transmission-state
# attr mqtt_led subscribeReading_color led/1/rgb
# attr mqtt_led subscribeReading_state led/1
define camera weblink image http://192.168.12.1:8081

define mqtt_motion MQTT_DEVICE
attr mqtt_motion IODev mqtt
attr mqtt_motion stateFormat transmission-state
attr mqtt_motion subscribeReading_state motion/sensor

define mqtt_client MQTT_DEVICE
attr mqtt_client IODev mqttbroker
attr mqtt_client stateFormat transmission-state
attr mqtt_client subscribeReading_command client/endpoint
define mqtt_client_trigger notify mqtt_client {\
# lock\
if($EVTPART1 eq "lock") {\
  fhem "set mqtt_lock ${EVTPART3}"\
} elsif($EVTPART1 eq "led") {\
  if ($EVTPART2 eq "all") {\
    fhem "set mqtt_light1 ${EVTPART3}";;\
    fhem "set mqtt_light2 ${EVTPART3}";;\
    fhem "set mqtt_light3 ${EVTPART3}";;\
  } else {\
    fhem "set mqtt_light${EVTPART2} ${EVTPART3}"\
  }\
} elsif($EVTPART1 eq "media"){\
    fhem "set kodi ${EVTPART3}"\
}\
}
define mqtt_light1 MQTT_DEVICE
attr mqtt_light1 IODev mqttbroker
attr mqtt_light1 publishSet on off led/1/set
attr mqtt_light1 publishSet_color led/1/rgb/set
attr mqtt_light1 stateFormat transmission-state
attr mqtt_light1 subscribeReading_color led/1/rgb/status
attr mqtt_light1 subscribeReading_state led/1

define mqtt_light2 MQTT_DEVICE
attr mqtt_light2 IODev mqttbroker
attr mqtt_light2 publishSet on off led/2/set
attr mqtt_light2 publishSet_color led/2/rgb/set
attr mqtt_light2 stateFormat transmission-state
attr mqtt_light2 subscribeReading_color led/2/rgb/status
attr mqtt_light2 subscribeReading_state led/2

define mqtt_light3 MQTT_DEVICE
attr mqtt_light3 IODev mqttbroker
attr mqtt_light3 publishSet on off led/3/set
attr mqtt_light3 publishSet_color led/3/rgb/set
attr mqtt_light3 stateFormat transmission-state
attr mqtt_light3 subscribeReading_color led/3/rgb/status
attr mqtt_light3 subscribeReading_state led/3

define mqtt_ac1 MQTT_DEVICE
attr mqtt_ac1 IODev mqttbroker
attr mqtt_ac1 publishSet on off ac/1/set
attr mqtt_ac1 stateFormat transmission-state
attr mqtt_ac1 subscribeReading_state ac/1
define activate_camera notify mqtt_motion:DT set mqtt_camera on
define mqtt_camera MQTT_DEVICE
attr mqtt_camera IODev mqtt
attr mqtt_camera publishSet on off camera/rpi
attr mqtt_camera stateFormat transmission-state
attr mqtt_camera subscribeReading_state camera/rpi/status

define mqtt_noise1 MQTT_DEVICE
attr mqtt_noise1 IODev mqtt
attr mqtt_noise1 stateFormat transmission-state
attr mqtt_noise1 subscribeReading_noise sound/sensor1

define mqtt_noise2 MQTT_DEVICE
attr mqtt_noise2 IODev mqtt
attr mqtt_noise2 stateFormat transmission-state
attr mqtt_noise2 subscribeReading_noise sound/sensor2

define mqtt_noise3 MQTT_DEVICE
attr mqtt_noise3 IODev mqtt
attr mqtt_noise3 stateFormat transmission-state
attr mqtt_noise3 subscribeReading_noise sound/sensor3

define noise1_trigger notify mqtt_noise1 {\
  if($EVTPART1 > 20){\
    fhem "mqtt_light1 set on"\
  }\
}
define mqtt_noiseled MQTT_DEVICE
attr mqtt_noiseled IODev mqtt
attr mqtt_noiseled publishSet ledstrip/lights/rgb/set
attr mqtt_noiseled stateFormat transmission-state

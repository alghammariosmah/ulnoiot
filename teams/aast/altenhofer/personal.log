# 2017_06_09:

## 08:50 - 09:20 who am i

###Who are you, why are you studying Mobile Computing?

	* Chris, Bachelors Degree in Mobile Computing in Hagenberg.
	* I started the master because i think mobile stuff is the 
	future and i like working on mobile devices.

###What do you expect from H&B Automation?

	* I expect some hands-on on some hardware and technologies we need in our homes and future homes.
	* Maybe some stuff we can use at home as well.

###Strength and weaknesses!

	* i currently work as part time android dev. im good at programming and working 
	in a team, using version control systems.
	* not so good at dokumentation
	* not good at linux

## 10:00 - 10:40 showtime with discussion

###scenarios and application domains
	* light switch over the internet
	* controll remote cars over the internet -> maybe security, privacy
	* turn on stereo over the internet -> entertainment
	* home and building in bigger sense -> buildings operate/ is networking like organisms
	* operation systems -> devices interact seamingless with the supply management.
	* dynamic route management for lifts etc. -> energy, logistics

###technologies
	* internet
	* plug and go
	* modular buildings
	* access control systems (open door concept)
	* smart light systems	

###feasibility, what doable, what not, when?
	* remote turn on devices, now
	* self driving cars, now under some concerns(prototypes).
	* dynamic routing (start up with chailift, to reduce the "jams")
	* access control system, now under some conerns (not like in the clip)
	* smart light systems, now with additional hardware(like amazon harmony hub)

###weirdness/crazyness (any concerns?)
	* security, can everybode use this, surveillance?
	* modular buildings, in sense of changing rooms.

## 10:40 - 12:00 setup repository
	* add personal log files
	* created folder hirachy

# Starting the practical part

## 13:00 - 16:15 get started with raspberry pi
	* connect notebook the the wifi iotempire-xxxxxx
	* connection to the correct device, check with usb stick and check mounts
	* problems encountered: 
		* could not connect to the pi
		* after password nothing happens(no sessions/servers appeared)
		* wrong passwords will be reconized
		* used putty.exe
		* tried with git-bash works like a charm
		* ssh pi@192.168.12.1 do the work
		* putty version wasnt working correctly.
	* device: pi zero + powersupply + wmos
	* setup putty.exe with hostname pi@192.168.12.1 pass: ulnoiot, connect
	* let the led flash up on the wmos adapter
#### led blink step by step
	* connection archieved
	* 2 break // use 2. byobu session
	* to enter wifi access point, F6 to exit
	* 3 to use ulnoiot
	* plug in wmos wifi adapter
	* wip // check ip
	* flash_wmosd1mini // flash the adapter
	* deploy_wmosd1mini // deploy the adapter, flash+deploy puts the configs on the adpater
	* console // enter interface console
	* help("wifi") // wifi help
	* wifi("iotempire-392bf9", "internetofthings") // reset the adapter
	* onboardled.init(Pin.OUT) // init the led on the adapter
	* onboardled.on() // on/off is switched, due to the wireing in the adapter
	* close console // ctrl + altgr + 9
#### update and use wifi
	* on the ulnoiot interface -> git pull -> download_firmware -> 
	* fix_bin
	* flash_ESP8266
	* deploy_wmosd1wmini
	* console
	* wifi("iotempire-392bf9", "internetofthings") // new connect we flashed new firmwarew
	* reset()	
	* wip
	* mqtt("192.186.12.1", "test") // ip of the raspberry pi not the apdater, connect raps pi to MQTT server
	* import ulnoiot.shield.devkit1_2led3but // import the devkit driver script, where the commands are stated
	* devices // show devices, red, yellow should be visible.
	* run()
	* rapberrypi: start ulnoiot, mqtt_send test/yellow/set on

## 16:15 - 16:50 research for debate
	* research and add bulletlist for the debate on thuesday

# 2017_06_10:

## 14:00 - 15:10 research for debate
	* looked up for some papers, articels for the debate in my topic(energy efficiency)

# 2017_07_11:

## 18:00 - 19:30 research for debate
	* read across a few articles for energy efficiency topic
	* watched debate videos

# 2017_06_12: 

## 08:50 - 10:50 research for debate
	* read across a few articles for energy efficiency topic
	* read findings of my colleagues

## 11:20 - 11:35 cloning pi sd cards
	* login to pi. take a session
	* goto sourcefolder // where rpi-clone is located
	* sudo ./
	* sudo ./rpi-clone sda // sda is the SD card name
	* yes // confirm
	* rootfs
	* yes // confirm

## 11:30 - 12:00 lecture
	* IoT make everything communication with each other.
	* Grid computing is just an old/outdated term for cloud computing.

## 12:00 - 13:00 starting with the smartlock
	* setup, wiring the smartlock
	* console // enter wmos interface
	* wifi("iotempire-392bf9", "internetofthings") // new connect we flashed new firmwarew
	* reset()
	* mqtt("192.168.12.1","servername") // start mqtt server on the pi.
	* import ulnoiot.shield.relay	// import the relay.py driver script, where the commands are stated
	* devices // check if the "relay" devices is connected
	* sequence is important
	* run() // start the server
	* on pi: mqtt_send servername/relay/set on
	* we encoutered some problems: we couldnt communicate with the mqtt server and the pi.
	* we needed to restart the pi and set everything up new. after the reboot it worked out.

## 13:00 - 13:15 adding public key
	* ssh-keygen.exe
	* file name
	* enter pi
	* add ssh key by adding the pub key to: /home/pi/.ssh/authorized_keys

## 13:15 - 14:40 NFC example
	* setup, wiring the NFC reader
	* start with the "install nfc" text

## 15:00 - 18:00 research for debate
	* merge findings together
	* finding con points to argue with

# 2017_06_13:

## 08:50 - 09:15 setup the pi
	* wiring, importing, testing functionality leds

## 09:15 - 09:30 prepare pi for NFC example
	* see google doc sheet to install nfc library on rpi
	https://drive.google.com/drive/folders/0B8HG4tKItRBab2hEZlN1Mzd5X2s
	* activate spi in raspi-config
		- sudo raspi-config
		- 5 interfacing options -> enter
		- P4 Spi -> enter
		- Yes -> enter
		- Ok -> enter
	* keep going with the doc sheet... 
	* ... after running Read.py NFC tags should be readable (when NFC hardware is setup corrently)		

## 09:30 - 10:40 nfc unlock example
	* wifi("iotempire-392bf9", "internetofthings") // new connect we flashed new firmwarew
	* reset()
	* mqtt("192.168.12.1","lockserver") // start mqtt server on the pi.
	* import ulnoiot.shield.relay	// import the relay.py driver script, where the commands are stated
	* //use startup scipt to get rid of the wmos/shield configs
	* //nfc library has to be installed
	* //install python mqqt library 
	* pip install paho-mqtt
	* // create new python file, copy Read.py
	* //import mqtt lib into the file 
	* import paho.mqtt.client as mqtt
	* // create mqtt client and connect to the mqtt server in the file beginning
	* client = mqtt.Client()
	* client.connect("192.168.12.1")
	* sending mqtt messages with:
	* client.publish("lockserver/relay/set/","on")

## 10:40 - 11:45 debate
	* the log is available in the 2017_06_13 debate.txt file

## 11:45 - 14:30 nfc unlock example with another channel
	* pip install paho-mqtt
	* // create new python file (nfc-id publisher), copy Read.py
	* //import mqtt lib into the file 
	* import paho.mqtt.client as mqtt
	* // create mqtt client and connect to the mqtt server in the file beginning
	* client = mqtt.Client()
	* client.connect("192.168.12.1")
	* // sending mqtt messages with, instead of the "set on" operation
	* data = str(uid[0])+..... // like the println from read.py
	* // send data on the nfc-id channel, dont send the "set on" operation to the relay
	* client.publish("nfc-id", data) 
	***
	* // create another script(controller/broker) which listens to the nfc-id channel
	* import paho.mqtt.client as mqtt // import the mqtt pack
	* // The callback for when the client receives a CONNACK response from the server.
	* def on_connect(client, userdata, flags, rc):
    	* keys = ["id of card", "id of 2nd card"]
	* print("Connected with result code "+str(rc))
	* // Subscribing in on_connect() means that if we lose the connection and
    	* // reconnect then subscriptions will be renewed.
    	* client.subscribe("nfc-id")
	* // The callback for when a PUBLISH message is received from the server.
	* def on_message(client, userdata, msg):
    	* print(str(msg.payload))
	* if (str(msg.payload) in keys:
	* client.publish("lockserver/relay/set/","on")
	* // create client object
	* client = mqtt.Client()
	* client.on_message = on_message
	* client.on_connect = on_connect
	* // connect to mqtt server
	* client.connect("192.168.12.1")
	* // subscribe to topic
	* client.subscribe("nfc-id")
	* // client should run in background
	* client.loop_forever()
	* // file is ready
	* // create a starting script
	* 

## 14:30 - 15:30 fixing
	* the rpi we are using (rpi 1b) supports a different kernel version. so the wifi interface wasnt able to start.
	* TEMP1=$(uname --kernel-release | cut -d+ -f1) // will remove the + after the version name which causes the error.

## 15:30 - 16:00 logging
	* team and personal log







# Friday, 9. June 08:50 - 12:05 [lecture]
## Gerald Teufl
### Who are you, why are you studying Mobile Computing?
Gerald from lower austria, also did the Bachelor in Mobile Computing, like the smaller systems
which are a mixture of hardware and software, using harware with sensors and develop server software, apps
and the communication between them.

### What do you expect from H&B Automation?
I already have experience with hardware devices and some IoT devices but not in the H&B area. I expect
that I can extend my skills in this area.

### Strength and weaknesses?
My strength are that I have experience with linux, hardware and networks and I like it to work in a team. I
also have no problems with documentation. A weakness and strength at the same time is that I am a 
perfectionist. Moreover, I have basic experience with git but not that much with advanced git functions. 


## Watching two movies and answer questions
What might be doable?
What not?
When?
Weirdness/crazyness?

### Movie 1
	* Lamp -> doable
	* Stereo, Music Player -> doable
	* Public access -> doable
	* Public access for all things -> not doable in this way they showed
	* Security/Privacy -> weird, crazy

#### Technologies
Wireless access, networks

### Movie 2
	* Displays -> AR, VR, just one guy monitors everything
	* Holograms -> not in the near future
	* Rooms moving -> doable but quiet far away
	* Doorless doors -> what if somebody is not allowed to enter?
	* Navigation -> doable
	* Modularity -> doable
	* Intelligent networking -> doable
	* Energy management -> near future
	* Lightning reacts on emergancy, reaction on full escape ways
	* Security -> increase security but also opens new doors for security issues

#Friday, 9. June 13:00 - 16:15 [lecture]
## Raspberry Pi setup
	1. Flash micro sd card with ulnoiot
	2. Connect to wifi access point of Raspberry Pi 3 (iotempire-b78ea5)
	3. Connect Raspberry Pi also via LAN to get internet access
	4. Connect via ssh to the raspberry pi 3, password: internetofthings
	5. Change password authentication to public/private key authentication
	6. Create key pair and copy public key to authorized keys on raspberry pi 3
	7. change wifi access point name to "teuschro" with password "schroteu"

mcedit -> editor

## wemosd1mini setup
	1. Type "ulnoiot" command to get into the environment
	2. wemosd1mini can then be flashed with the command "flash_wemosd1mini"
	3. Next step is to deploy with the command "deploy_wemosd1mini" (2 times probably)

type "console" -> serial connection
"help" -> help documentation

## Blue led
	* init led -> "onboardled.init(Pin.OUT)"
	* toggle led (on, off) -> "onboardled.on()" and "onboardled.off()"

## Connect wemosd1mini with wifi
	1. wscan -> scan wifi networks
	2. wifi("teuschro", "schroteu") -> for connecting to the access point
	3. wip -> shows wireless ip -> 192.168.12.18

	* pull git repo for new firmware on Raspberry Pi 3
	* download_firmware -> download newest firmware
	* fix_bin -> binary fixes
	* flash_esp8266 -> flashing
	* again deploying

Micropython webrepl was not working with Firefox on Linux and Windows but
it worked on Microsoft's Edge browser on Windows

## Public/Subscriber mqtt
	1. reset()
	2. mqtt("192.168.12.1", "test")
	3. help("shield")
	4. import devkit1_2led3but (depends in which folder we are currently)
	5. devices -> show devices
	6. run() -> to start

byobu -> session management system


# Saturday 10. June 15:00 - 17:30
Reasearch for pro Home and Building Automation especially security and safety improvements.

http://www.networkworld.com/article/2925722/security0/home-security-demystified-how-to-build-a-smart-diy-system.html
	* Home securtiy systems -> cheaper than traditional alarm systems because you have not to pay monthly fees
	* Surveillance of you home to protect it against criminals
	* Using water sensors for monitoring the flow of the water for example water plants, fountain, swimming pools, creeks
	* Using smoke sensors to get notifications when smoke is in your home
	* Using fire sensors to alarm the user when it is burning

http://www.techradar.com/how-to/world-of-tech/how-to-protect-your-smart-home-1328600
	* Camera based systems to protect you home
	* Intelligent door bell which uses cameras for monitoring or for face recognition
	* Motion detection

http://www.ijser.org/researchpaper%5CSmart-Home-Automated-Control-System-Using-Android-Application-and-Microcontroller.pdf
	* Home saftey secure system

https://www.asmag.com/showpost/16499.aspx
	* Alarm and fire safety systems


#Monday 12. June 11:30 - 14:35 [lecture]
wemos has not enough memory for certificate evaluation

## Start using smartlock
	1. Connect relay to the wemosd1mini and the smartlock
	2. Console to connect to wemosd1mini
	3. reset()
	4. Start mqtt with mqtt("192.168.12.1", "lock")
	5. Then import "relay" with import ulnoiot.shield.relay (depends in which folder you are currently)
	6. Check available devices with "devices" command
	7. run() -> run driver
	8. Test program with mqtt_send lock/relay/set on and off on Raspberry Pi 3

## Raspberry Pi 3 NFC setup
	1. Connect the NFC board to the Raspberry Pi 3 using a empty board, NFC board, Pi Viiros board and a flat cable
	2. Image teams/aast/teufl/images/nfc_viiros_boards_connection.png shows the construction
	3. Connect the flat cable to the Pi Viiros board and the Raspberry Pi 3 connectors
	4. Image teams/aast/teufl/images/nfc_raspberrypi3_finish.png shows the finished construction
	5. Install NFC driver like described on https://goo.gl/sE23Vo

# Monday 12. June 14:35 - 18:00
	* preparing statements for debate
	* combining all pro arguments for debate
	* looking for con arguments for the personal debate video
	* recording the video

# Monday 12. June 22:30 - 23:45
	* restructuring personal log
	* updating personal log
	* updating kanban board


# Tuesday 13. June 8:50 - 12:05 and 13:00 - 16:15 [lecture]
## Debate notes
### Cons
	* cost effiency -> hire company -> not everyone has the ability to build a system, 40 years that it will get profitable
	* makes life much more complicated
	* google knows the answer of people when using smartphones -> using for home automation 
	* they are creating profiles of everyone
	* economics -> kills small scale industries -> supermarkets
	* security -> no one cares about that
	* not so complex to raise false alarms
	* save 100€ per year -> not much -> tooks 10 years but costs maintainance

### Pros
	* also not technical persons can use home and bulding automation systems
	* safety -> able to control and sense everything -> emergency
	* connect to your neighborhood
	* time savings
	* energy savings -> reduce energy wastage
	* save money -> smart shading -> 20% - 30% saving of energy
	* usage -> monitoring

### Questions
	* You said that cameras can produce false alarms -> but better 1 or two false alarms than your home is empty after vacation
	* Comfort, price? Comfort is more important tan price -> years ago we have no smartphones but now a lot of people bye a 700€
	  iPhone every year
	* Everything is hackable? -> nothing is 100% safe, you also will do trips to other countries altough there were some terrorist
	  attacks or not?	

## Setting up python scripts to lock/unlock door lock with NFC
### Python NFC script
	1. Install python mqtt library with cmmand "pip install paho-mqtt" on Raspberry Pi 3
	2. Copy python script read.py from home/pi/ulnoiot/pi.nfc/MFRC522-python and rename it to nfc-lock.py
	3. Import mqtt library (import paho.mqtt.client as mqtt)
	4. Add code to the file to connect to the mqtt server and publish the command to unlock the door lock
	5. The added lines are "client = mqtt.Client()", "client.connect("192.168.12.1")" and "client.publish("lock/relay/set", "on")"
	
On the wemosd1mini subscribe on the mqtt server, import the driver and start running it

### Python brocker script
Then second script is a python brocker script which subscribes in the nfc-id topic and listens for ids. When ids
arrive they will be checked if they are valid ones. If they are valid the door lock will be unlocked and then automatically 
locked again after 5 seconds

```python
	import paho.mqtt.client as mqtt
	from threading import Timer

	authorized_keys = ["b'102-247-124-65'"]

	def on_connect(client, userdata, flags, rc):
        	print("Connected with result code "+str(rc))
        	client.subscribe("nfc-id")

	def lock():
        	client.publish("lock/relay/set", "off")

	def unlock():
        	client.publish("lock/relay/set", "on")


	def on_message(client, userdata, msg):
        	print("checking if key: " + str(authorized_keys))
        	print("received key: " + str(msg.payload))
        	if str(msg.payload) in authorized_keys:
                	print("valid key detected")
                	unlock()
                	timer = Timer(5.0, lock)
                	timer.start()


	client = mqtt.Client()
	client.on_connect = on_connect
	client.on_message = on_message

	client.connect("192.168.12.1")

	client.loop_forever()
```

### wemosd1mini start script
Create a user.py script with the follwoing lines of code:
```
from ulnoiot import *
import ulnoiot.shield.relay

mqtt("192.168.12.1", "lock")
run()
```

## Serial connection from the laptop or pc
Therfore, the program minicom or picocom can be used with the command for example "picocom -b 115200 -l -r /dev/ttyUSB0"

## Temperature sensor
	1. Connect temperature sensor shield to wemosd1mini
	2. Download new firmware because there was a bug in the script
	3. Then flash and deploy wemosd1mini using the same steps as written in log on Friday 9. June
	4. Import driver with "import ulnoiot.shield.devkit1_ht"
	5. Temperature and humidity can be read out with the commands "devices["ht1"].temperature()" and "devices["ht1"].humidity()"
	6. Subscribe mqtt with command "mqtt("192.168.12.1", "temp")" and run it with "run()"
	7. The temperature and humidity will the automatically published to "temp/ht1/temperature" and "temp/ht1/temperature"

# Tuesday 13. June 21:00 - 22:00
	* updating team log with movie compilation, debate notes and practical part descriptions
	* updating personal log

# Team log of team Chris, Flo, Gerald and Sam [Teamname = aast]

##Devices[ulno]
1 x Olimex Development Board
1 x Pi Zero W (returned)
3 x wemosd1mini
1 x devkit1_2led3but
1 x NFC board
1 x Temperature sensor

##Devices[university]
1x Empty board
1x Pi Viiros board
1x Flat cable
1x Pi box

##Who is who

###Florian Schrofner
who are you? why studying mobile computing?
florian, from salzburg, did my bachelors here
started mobile computing as world is becoming more mobile and its becoming more and more important topic
(chose to do masters as it offers a lot of additional hands-on experience and a open curriculum)

what do you expect from h&b?
a lot of tinkering with the raspberry
cool setups that you can try at home
new linux skills

if you were a team of 4 persons what would you bring to the table?
experienced linux user, using linux since i started my bachelors
not too much experience with sensors

###Christian Altenhofer
####Who are you, why are you studying Mobile Computing?

	*Chris, Bachelors Degree in Mobile Computing in Hagenberg.
	*I started the master because i think mobile stuff is the 
	future and i like working on mobile devices.

####What do you expect from H&B Automation?

	*I expect some hands-on on some hardware and technologies we need in our homes and future homes.
	*Maybe some stuff we can use at home as well.

####Strength and weaknesses!

	*i currently work as part time android dev. im good at programming and working 
	in a team, using version control systems.
	*not so good at dokumentation
	*not good at linux

###Gerald Teufl
####Who are you, why are you studying Mobile Computing?
Gerald from lower austria, also did the Bachelor in Mobile Computing, like the smaller systems
which are a mixture of hardware and software, using harware with sensors and develop server software, apps
and the communication between them.

####What do you expect from H&B Automation?
I already have experience with hardware devices and some IoT devices but not in the H&B area. I expect
that I can extend my skills in this area.

####Strength and weaknesses?
My strength are that I have experience with linux, hardware and networks and I like it to work in a team. I
also have no problems with documentation. A weakness and strength at the same time is that I am a 
perfectionist. Moreover, I have basic experience with git but not that much with advanced git functions.  

###Osamah Al-Ghammari
####who are you? why studying ENI?
I am Osamah Al-Ghammari, called me Sam, A computer engireering bachelor graduate and ENI master student. 

####what do you expect from h&b? 
Learning new hardware and some software skills.

####Strength and weaknesses?
good at SSH, Linux, network and security, and Python, C and Java programming langauges. 
Spending so much time programming a task.


## Watching two movies and answer questions
	* What might be doable?
	* What not?
	* When?
	* Weirdness/crazyness?

### Movie 1
        * Lamp -> doable
        * Stereo, Music Player -> doable
        * Public access -> doable
        * Public access for all things -> not doable in this way they showed
        * Security/Privacy -> weird, crazy

#### Technologies
Wireless access, networks

### Movie 2
        * Displays -> AR, VR, just one guy monitors everything
        * Holograms -> not in the near future
        * Rooms moving -> doable but quiet far away
        * Doorless doors -> what if somebody is not allowed to enter?
        * Navigation -> doable
        * Modularity -> doable
        * Intelligent networking -> doable
        * Energy management -> near future
        * Lightning reacts on emergancy, reaction on full escape ways
        * Security -> increase security but also opens new doors for security issues

### Scenarios & application domains
	1. switch on light, turn down stereo, control cars
	2. buildings into living organism, adapting to users, managing water & energy, evacuation scenarios


## Video recording and preperation
	* phrasing the statements
	* prepairing arguments
	* recording video
	* written down on file debate.txt, who did what in bulletlist_debate.txt

## Debate 
### Statement round
	* contra. price, costs -> not everyone has the ability to install home automation, after years some parts break replace?
		- every tech if smart or dump, needs support. if you gear your house with eg. thermostats, why not use a smart thermostat?
	* contra. non tech affine persons cant use smart home systems
		- i think it's in the hand of the companies to design the
	* pro. every person can use home automation, the stuff is made to be used in a simple way.
	* contra. privacy, information in the internet.
		- google, you use a notebook (google.com), and use your smartphone anyways. why not use the smartphone in your network.
	* contra. economicy, big companies instead of small family buisnesses(butchery, farmers)
	* contra. security, unsave OS are used, functionality over security.
	* pro. efficiency, remotly, find energy hogs
	* pro. security, safty against natrual forces, or thievs(motion detect, thermal cams)
	* pro. productivity, provides a better working enviroment, better usage of space(shared spaces, costs)
	#### 1st. Topic Safety, Security and Privacy
	* systems may be not secure? every OS is unsecure in a way, linux for example is unsecure in a way as well.
	* private informations? privacy against convinience.
	* hardware key is not hackable! fingerprints are reproduceable.
		- you can lose your hardware key ofter equipped with tags!
	#### 2st. Topic Efficiency, Costs
	* smart theromostats, reduce the heating costs. smart shading reduce heating -> 20-30%
	* you have maintenance costs.
		- when heating/cooling is running all the time you have inefficient usage. 
		- maintenance costs are with dump devices as well. 
		so when you need a new system, why not install a smart device.
	#### 3st. Big Players, combine differnet systems, interoperability.
	* one system rules them all, give all informations to this company(amazon eco)
		- small companies like loxone keep your data private(server is in home)
	* differencial privacy (anynomise big data)

	* Cons
        * cost effiency -> hire company -> not everyone has the ability to build a system, 40 years that it will get profitable
        * makes life much more complicated
        * google knows the answer of people when using smartphones -> using for home automation
        * they are creating profiles of everyone
        * economics -> kills small scale industries -> supermarkets
        * security -> no one cares about that
        * not so complex to raise false alarms
        * save 100€ per year -> not much -> tooks 10 years but costs maintainance

	*Pros
        * also not technical persons can use home and bulding automation systems
        * safety -> able to control and sense everything -> emergency
        * connect to your neighborhood
        * time savings
        * energy savings -> reduce energy wastage
        * save money -> smart shading -> 20% - 30% saving of energy
        * usage -> monitoring


## Raspberry Pi setup
        1. Flash micro sd card with ulnoiot
        2. Connect to wifi access point of Raspberry Pi 3 (iotempire-b78ea5)
        3. Connect Raspberry Pi also via LAN to get internet access
        4. Connect via ssh to the raspberry pi 3, password: internetofthings
        5. Change password authentication to public/private key authentication
        6. Create key pair and copy public key to authorized keys on raspberry pi 3
        7. change wifi access point name for example to "teuschro" with password "schroteu"

## wemosd1mini setup
        1. Type "ulnoiot" command to get into the environment
        2. wemosd1mini can then be flashed with the command "flash_wemosd1mini"
        3. Next step is to deploy with the command "deploy_wemosd1mini" (2 times probably)

type "console" -> serial connection
"help" -> help documentation

## Blue led
        * init led -> "onboardled.init(Pin.OUT)"
        * toggle led (on, off) -> "onboardled.on()" and "onboardled.off()"

## Connect wemosd1mini with wifi
        1. wscan -> scan wifi networks
        2. wifi("teuschro", "schroteu") -> for connecting to the access point
        3. wip -> shows wireless ip -> 192.168.12.18

        * pull git repo for new firmware on Raspberry Pi 3
        * download_firmware -> download newest firmware
        * fix_bin -> binary fixes
        * flash_esp8266 -> flashing
        * again deploying

Micropython webrepl was not working with Firefox on Linux and Windows but
it worked on Microsoft's Edge browser on Windows.

## Public/Subscriber mqtt
        1. reset()
        2. mqtt("192.168.12.1", "test")
        3. help("shield")
        4. import devkit1_2led3but (depends in which folder we are currently)
        5. devices -> show devices
        6. run() -> to start

## Start using smartlock
        1. Connect relay to the wemosd1mini and the smartlock
        2. Console to connect to wemosd1mini
        3. reset()
        4. Start mqtt with mqtt("192.168.12.1", "lock")
        5. Then import "relay" with import ulnoiot.shield.relay (depends in which folder you are currently)
        6. Check available devices with "devices" command
        7. run() -> run driver
        8. Test program with mqtt_send lock/relay/set on and off on Raspberry Pi 3

## Raspberry Pi 3 NFC setup
        1. Connect the NFC board to the Raspberry Pi 3 using a empty board, NFC board, Pi Viiros board and a flat cable
        2. Image teams/aast/teufl/images/nfc_viiros_boards_connection.png shows the construction
        3. Connect the flat cable to the Pi Viiros board and the Raspberry Pi 3 connectors
        4. Image teams/aast/teufl/images/nfc_raspberrypi3_finish.png shows the finished construction
        5. Install NFC driver like described on https://goo.gl/sE23Vo

## Setting up python scripts to lock/unlock door lock with NFC
### Python NFC script
        1. Install python mqtt library with cmmand "pip install paho-mqtt" on Raspberry Pi 3
        2. Copy python script read.py from home/pi/ulnoiot/pi.nfc/MFRC522-python and rename it to nfc-lock.py
        3. Import mqtt library (import paho.mqtt.client as mqtt)
        4. Add code to the file to connect to the mqtt server and publish the command to unlock the door lock
        5. The added lines are "client = mqtt.Client()", "client.connect("192.168.12.1")" and "client.publish("lock/relay/set", "on")"

On the wemosd1mini subscribe on the mqtt server, import the driver and start running it.

### Python broker script
Then second script is a python brocker script which subscribes in the nfc-id topic and listens for ids. When ids
arrive they will be checked if they are valid ones. If they are valid the door lock will be unlocked and then automatically
locked again after 5 seconds.

```python
        import paho.mqtt.client as mqtt
        from threading import Timer

        authorized_keys = ["b'102-247-124-65'"]

        def on_connect(client, userdata, flags, rc):
                print("Connected with result code "+str(rc))
                client.subscribe("nfc-id")

        def lock():
                client.publish("lock/relay/set", "off")

        def unlock():
                client.publish("lock/relay/set", "on")

        def on_message(client, userdata, msg):
                print("checking if key: " + str(authorized_keys))
                print("received key: " + str(msg.payload))
                if str(msg.payload) in authorized_keys:
                        print("valid key detected")
                        unlock()
                        timer = Timer(5.0, lock)
                        timer.start()


        client = mqtt.Client()
        client.on_connect = on_connect
        client.on_message = on_message

        client.connect("192.168.12.1")

        client.loop_forever()
```

### wemosd1mini start script
Create a user.py script with the follwoing lines of code:
```
from ulnoiot import *
import ulnoiot.shield.relay

mqtt("192.168.12.1", "lock")
run()
```

## Serial connection from the laptop or pc
Therfore, the program minicom or picocom can be used with the command for example "picocom -b 115200 -l -r /dev/ttyUSB0".

## Temperature sensor
        1. Connect temperature sensor shield to wemosd1mini
        2. Download new firmware because there was a bug in the script
        3. Then flash and deploy wemosd1mini using the same steps as written in log on Friday 9. June
        4. Import driver with "import ulnoiot.shield.devkit1_ht"
        5. Temperature and humidity can be read out with the commands "devices["ht1"].temperature()" and "devices["ht1"].humidity()"
        6. Subscribe mqtt with command "mqtt("192.168.12.1", "temp")" and run it with "run()"
        7. The temperature and humidity will the automatically published to "temp/ht1/temperature" and "temp/ht1/temperature"

## Display sensor
	1. Connect display shield to wemosd1mini
	2. Import driver with "import ulnoiot.shield.devkit1_display"
	3. Displays the current ip and the ulnoiot path

## Presentations
###Can Bus
        * Automotive field
        * Connecting ECUs
        * Publish/Subscriber system
        * Two different speeds, 125kbit/s and 1Mbit/s
        * Differential transmission
        * Real-time transmission
        * CSMA/CA is used
        * Bridges are available
        * OBD2 connectors

### SPI
        * Serial Peripheral Interface
        * Used for WIFI module, camera modules, nfc modules, in every laptop/pc
        * Extremely simple, higher throughput than I2C or SMBus
        * No error checking protocols
        * No hot-swapping (dynamically adding notes)
        * Full duplex communication
        * Master/Slave architecture

### X10
        * Communication protocol for electronic devices
        * Carrier frequency 120 kHz -> transmitted as short bursts
        * 4 bit house code -> 1-4 bit unit code -> 4 bit command
        * One way and two way devices
        * Different modules can be used -> temperature, light, motion, infra-red
        * ioBridge -> translate X10 protocol to a web service

### Zigbee
        * For controlling sensor networks
        * Based int IEEE 802.15.4 standard
        * Different frequency bands 2,4 GHz, 915 MHz and 868 MHz
        * Topology = Star, Cluster Tree and Mesh
        * Environmental monitoring
        * 2003 developed

### Z-Wave
        * New technology, since 2008
        * Wireless technology
        * Use cases -> device controlling, monitoring
        * Frequency range -> 1GHz
        * Low power
        * Mesh networks
        * Similar to Zigbee and Bluetooth
        * Works with OpenADR
        * Interoperability -> quiet frequency
        * Prices between 17$ - 136$

### 1- Wire
        * Based on master and slave principle
        * Slaves have unique ID
        * Do not need an external power supply
        * Usage -> temperature sensor, timers, memory, battery, authentication
        * Micro Lan -> one master with multiple slaves
        * Bus -> 3 to 5 volts
        * No collition avoidance
        * 1-Wire means only need one wire + ground

### I2C
        * First version 1982 by Phillips
        * Normal mode and fast mode -> 100 kbit/s to 400 kbit/s
        * 1998 -> version 2.0
        * Now -> 2014 with version 6.0
        * Appllications are monitors, displays, wemos

### KNX
        * OSI-based network communication protocol
        * Combining of free protocols which were already there
        * Twisted pair wiring
        * Independent of any particular platform
        * 16 bit address space
        * 2 twisted pairs -> one usable for data
        * Supply voltage of 30V

### RS232 / RS422 / RS485 / DMX-512
        * Standards for serial communicatio in 1960s
        * Used in computer serial ports
        * Used in industrial solutions
        * RS-232 -> 256 kbit/s -> 15m max length -> does not define charcter encoding -> full duplex
        * RS-422 -> successor of RS-232 -> up to 10 Mbit/s -> max length not defined
        * RS-485 -> successor of RS-422 -> multipoint system are supported -> also 10 Mbit/s -> half or full duplex
        * DMX-512 -> Standard for digital communication -> speed is 250 kbit/s -> maximum cable length is 450m -> 3 to 5 wires

##Simulators
###LED Simulator
A simulator written in Ruby.
It accepts two parameters, the mqtt server and the topic it subscribes to.
An example call would be: ./led.rb 192.168.12.1 "led/1"

The simulator then listens to mqtt messages, which are used to control it.
With "led/1" (the subscribed topic) and a payload, which defines the color, the color of the led can be set. To test, a mqtt sender script was written, which can be called with the following call:

./send.rb 192.168.12.1 "led/1" "purple"

Additionally the leds can also be turned on and off, with the turn topic.

./send.rb 192.168.12.1 "led/1/turn" "on"
./send.rb 192.168.12.1 "led/1/turn" "off"

To display the current state, the simulator colorises the terminal with the specified color (or black, if it is turned off).

After the status and/or color has changed, the simulator will publish an update on:
"led/1/status" and "led/1/color". Status can either be "on" or "off", whereas color defines the current color of the led.
###Java Temp simulator
A simulator written in Java. Sends constant temp, adapt with a slider.

### Fhem tinkering
###setting up fhem (windows)
	* // http://fhem.de/HOWTO_Windows.html
	* download fhem
	* download strawberry perl (use msi package to update and install moduls) // extract in fhem folder
	* open fhem.cfg file add following global attribute:
	* attr global motd none

	* perl fhem.pl fhem.cfg // restart (open commandline in fhem dif) 
	* localhost:8083/fhem // open webinterface
	* every commands can be typed in the webinterface eg. "shutdown restart"

###setup lock
	* define mqttbroker MQTT 192.168.1.104:1883 // connect to mqttserver
	* not working Win32::SerialPort modul is missing
	* goto fhem/perl/bin 
	* cpan.bat // execute cpan bat
	* install Win32::SerialPort
	* // not working
	* download http://search.cpan.org/~bbirth/Win32-SerialPort-0.22/lib/Win32/SerialPort.pm
	* perl nomake_install works fine
	* define mqttbroker MQTT 192.168.1.104
	* define mqtt_lock MQTT_DEVICE // add new mqtt device
	* attr mqtt_lock publishSet on off lock/relay/set 
	* // add method to control lock(publishSet is the method to pub. on the endpoint "lock/relay/set)
	* state is ???
	* attr mqtt_lock subscribeReading_state lock/relay
	* // get the current state on "lock/relay" endpoint
	* unsorted devices, mqqt_server -> connect
	* unsorted devices, mqtt_lock -> set on/off

### trying triggers
	* running java temp simulator: when temp > 25 open lock
	* define mqtt_temp_trigger notify set test test // create a "dummy notify" better editable in the notify edit menu
	* script looks like:
	* mqtt_temp_sim { // listen on this device
	
if($EVTPART1 > 25) {	// when the value is > 25
	fhem "set mqtt_lock on"
	// send/set this
	} else { 
	
fhem "set mqtt_lock off" // send/set this otherwise.
	
}
}


# Your friends home

### Counting
- Windows count as one even if there are multiple glass panels
- Floor 1
* Doors: Outside 2, Inside 4 normal, 3 sliding
* Windows: 13 window panels // study room = 2 windows (corner)

- Floor 2
* Doors: Outside 0, Inside 9 normal, 1 sliding
* Windows: 17 window panels // bed 1= 3 windows (2 corners)

## Work Package Smart Control, Gadgets
## Time estimation
## Voice Control (Echo Dot) Rooms where echo is needed
Floor 1:
* family + dining + kitchen
* living
* study
Floor 2:
* bed 1
* bed 2 // rent
* bed 3 // rent
* bed 4 // rent
* activity area
### time estimation
- setup phase echo dot
  * 8 x 30 min

## Smart Button
- Connecting the Button shield
  * 6 x 20 min
- Setting up the Wemos D1 mini
  * 6 x 20 min
- Adding the buttons to home assistant
  * 6 x 2 min

## Smart Washing Machine
- Setup
  * 30 min
- Testing + application testing
  * 20 min

## Client Application
- Designing
  * 5 h
- Programming
  * 40 h
- Testing + bug fixing
  * 5 h
- Adding to home assistant
  * 10 h
## Money estimation
## Voice Controll
- Amazon Echo Dot 2. Generation (54.99€)
* for voice controll commands (Alexa)
* https://www.amazon.de/Amazon-Echo-Dot-Generation-Schwarz/dp/B01DFKBG54/ref=sr_1_2?ie=UTF8&qid=1497605135&sr=8-2&keywords=amazon+echo

## Smart Washing Machine
- Samsung Smart washing machine (669€)
* wifi controll(control via application), add wash(add cloth during wash process), 
* unfortunalty only able to control with samsung application.
* https://www.amazon.de/Samsung-WW80K6404QW-EG-Waschmaschine-Inverter/dp/B01BC3TPB8/ref=sr_1_4?ie=UTF8&qid=1497607241&sr=8-4&keywords=samsung+add+wash

## Smart Buttons
- Wemos D1 Mini (3.50€)
  
* To control the buttons
* https://de.aliexpress.com/store/product/D1-mini-Mini-NodeMcu-4M-bytes-Lua-WIFI-Internet-of-Things-development-board-based-ESP8266/1331105_32529101036.html

- Wemos D1 Mini Button Shield (0.57€)
* Handle user input
* https://de.aliexpress.com/item/One-Button-Shield-For-WeMos-D1-Mini-Button/32738582660.html?spm=2114.010208.3.2.7XTqNa&ws_ab_test=searchweb0_0,searchweb201602_5_10152_10208_10065_10151_10068_10304_10136_10137_10060_10302_10155_10062_437_10154_5300011_10056_10055_10054_10059_303_100031_10099_10103_10102_10096_10052_10053_10142_10107_10050_10051_5030011_10084_10083_10080_10082_10081_10177_10110_519_10111_10112_10113_10114_10182_10078_10079_10073_10123_10189_142,searchweb201603_1,ppcSwitch_4&btsid=c69cd4ad-f75b-4ee8-bc59-82fa9dea2279&algo_expid=c3953b90-f773-40c5-bf17-b8ee714b50a8-0&algo_pvid=c3953b90-f773-40c5-bf17-b8ee714b50a8

## Smartphone control
- home assistant (Server side)
* open source home automation platform using python 3
* compatible to:
	+ amazon echo: voice controll
	+ IFTTT: create conditional statements (channels)
	+ mqtt: machine to machine, IoT protocol

- Custom Smartphone app (Client side) ~ 50H of work
* sends mqtt requests to the server
* server runs home assistant + IFTTT integration
* send IFTTT request to devices (Philipps HUE lamp, etc.)

## Router (access points)
### NETGEAR R6220 Wireless Router (R6220-100PES) (75.0€)
    * WLAN router with 2.4 GHz and 5 GHz range
    * Standards 802.11 a/b/g/n/ac
    * 2 external antennas
    * WPA, WPA2 encryption
    * WPS for smart configuration
    * WLAN router for large homes
    * Easy configuration with Netgear genie software
    * http://www.mediamarkt.at/de/product/_netgear-r6220-wireless-router-r6220-100pes-1412347.html


### NETGEAR Wireless Router WNR2000-200PES Rangermax (33.0€)
    * WLAN router with 2.4 GHz range
    * Standards 802.11 b/g/n
    * Internal antennas
    * WPA, WPA2 encryption
    * WPS for smart configuration
    * WLAN router for small homes
    * Easy configuration with Netgear genie software
    * http://www.mediamarkt.at/de/product/_netgear-wireless-router-wnr2000-200pes-rangermax-1389996.html

## Smart thermostats
### Anself WIFI smart thermostat 16A 110 ~ 240V (47.5€)
    * Smart thermostat for electrical heaters
    * Integrated WIFI
    * LCD display
    * Control the thermostat via WLAN
    * https://de.aliexpress.com/item/16A-110-240V-Electric-Heating-WIFI-Smart-Thermostat-with-Touchscreen-LCD-Display-Durable-Programmable-Temperature-Controller/32804567411.html


## Wemosd1mini (3.5€)
    * Integrated WLAN
    * ESP-8266EX microcontroller
    * https://de.aliexpress.com/store/product/D1-mini-Mini-NodeMcu-4M-bytes-Lua-WIFI-Internet-of-Things-development-board-based-ESP8266/1331105_32529101036.html

## Micro USB Cables - Aukey 5 pieces (5.8€)
    * To connect different devices (mainly wemos boards)
    * https://de.aliexpress.com/item/Aukey-5-Pack-Micro-USB-Cable-Fast-Charging-Adapter-5V2A-Data-Charger-Mobile-Phone-Cable-for/32637756862.html

### Temperature and humidity (0.73€)
    * Arduino temperature and humidity sensor
    * Place in every room to monitor temperature and humidity
    * https://www.aliexpress.com/item/1pcs-DHT11-Digital-Temperature-and-Humidity-Sensor-Module-for-Arduino-UNO-R3-lot-free-shipping/32666492380.html

### Shutters (2.7€)
    * Wemosd1mini motor control shield
    * Connect the shutters of each windows to control them
    * https://de.aliexpress.com/store/product/Motor-Shield-For-WeMos-D1-mini-I2C-Dual-Motor-Driver-TB6612FNG-1A-V1-0-0/1331105_32700182142.html

### Ventilation
#### Wemosd1mini motor control shield (2.7€)
    * Connect to 12/24V DC linear actuator for opening windows
    * https://de.aliexpress.com/store/product/Motor-Shield-For-WeMos-D1-mini-I2C-Dual-Motor-Driver-TB6612FNG-1A-V1-0-0/1331105_32700182142.html

#### Wemosd1mini relay shield (1.8€)
    * Connect the relay to the ceiling fan for controling it
    * https://de.aliexpress.com/store/product/Relay-Shield-for-WeMos-D1-mini-button/1331105_32596395175.html

#### 12V linear actuator for opening windows (13.5€)
    * Linear actuators for controlling the windows for ventilation
    * https://www.alibaba.com/product-detail/12V-Linear-Actuator-for-Window-Open_60293988621.html?s=p

#### Ceiling fan (99.0€)
    * Ceiling fan for better ventilation
    * http://www.hornbach.at/shop/Deckenventilator-Audubon-Ahorn-Silber/7226562/artikel.html

### Lightning (1.8€)
    * Wemosd1mini relay shield
    * Connect the relay in a two-way connection to the lightning switches
    * https://de.aliexpress.com/store/product/Relay-Shield-for-WeMos-D1-mini-button/1331105_32596395175.html

## Hardware list
### Smart thermostat
    * 12 x Anself WIFI smart thermostat 16A 110 ~ 240V (47.5€)

### Smart light
    * 14 x Wemosd1mini (3.5€)
    * 14 x Wemosd1mini relay shield (1.8€)

### Smart shutter/window
    * 18 x Wemosd1mini (3.5€)
    * 18 x Wemosd1mini motor control shield (2.7€)
    * 12 x 12V linear actuator for opening windows (13.5€)

### Smart ceiling fan
    * 3 x ceiling fan (99.0€)
    * 3 x Wemosd1mini (3.5€)
    * 3 x Wemosd1mini relay shield (1.8€)

### Temperature/humidity
    * 13 x Arduino temperature and humidity sensor (0.73€)

### Wires
    * 7 x Micro USB Cables - Aukey 5 pieces (5.80€)

## Hardware costs
### Smart thermostat
    * 570€
### Smart light
    * 74.2€
### Smart shutter/window
    * 273.6€
### Smart ceiling fan
    * 312.9€
### Temperature/humidity
    * 9.5€
### Wires
    * 40.6€
### Overall costs
    * 1280.8€

## Working hours
    * Configuration of all four WLAN router (1h)
    * Installing smart thermostats, connecting to WLAN and to home assistant (5h)
    * Soldering and flashing of all wemosd1mini (12h)
    * Installing two-way connection for smart lightning (10h)
    * Installing temperature/humidity sensor shield (5h)
    * Installing linear actuators on all windows (8h)
    * Setting up wemos for shutters and windows (10h)
    * Building ceiling fans (4h)
    * Setting up wemos for ceiling fans (5h)
    * Adding all devices to home assistant (5h)
    * Testing (2h)

### Overall working hours
    * 67h

###Entertainment - Media Centers
#Hardware
	* Roku Streaming Stick 28 €
	* Link: https://www.cnet.com/products/roku-streaming-stick-review/
#Work
	* Inserting 1 min
	* Installing the app 1 min
#Total (8 with 224 €)
	* 3 in ground floor: 1 in big hall, 1 in the living room, 1 in the study room
	* 5 in first floor: 4 in bedrooms, 1 in the activity area. 
# time estimation
	* setup Raku Streaming Set with the app = 8 x 2 min

###Security - Noise tracking
#Hardware
	* Wemos D1 Mini ~ 3.5 €
	* Link: https://de.aliexpress.com/store/product/D1-mini-Mini-NodeMcu-4M-bytes-Lua-WIFI-Internet-of-Things-development-board-based-ESP8266/1331105_32529101036.html
	* Noise Sensor (Arduino KY-038)  ~ 0.46 €
	* Link: https://es.aliexpress.com/store/product/Microphone-Sound-Sensor-Module-for-arduino-KY-038/318950_1060263665.html
	* Wires 0.6€
	* total = 1.66 €
# Work
	* Placing the Noise Sensor ~ 5 min
	* Connecting the Noise Sensor to Wemos D1 mini ~ 20 min
	* Setting up the Wemos D1 mini ~ 20 min
	* Adding the noise sensor to home assistant ~ 5 min
	* total = 50 mins
# Total (6 Noise trackers 2.76 Euros)
	* 2 in ground floor: One in the garage, and one outside
	* 4 in first floor: in every bedroom.
	* Total hours of work ~ 5:00 hours
# time estimation
	* Placing the Noise Sensor = 6 * 5 min = 30 mins
	* Connecting the Noise Sensor to Wemos D1 mini = 6 * 20 min = 2 hours
	* Setting up the Wemos D1 mini = 6 * 20 min = 2 hours
	* Adding the noise sensor to home assistant = 6 * 5 min = 30 mins
	* total 5 hours. 
# Client Application 
	* Designing = 5 h (20 € /hour) 
	* Programming = 40 h (30 € /hour) 
	* Testing + bug fixing = 5 h (20 € /hour) 
	* Adding to home assistant = 10 h (20 €/hour)

##Securing the doors, cameras & motion sensors
Door counts (according to Chris):
Floor 1: Outside 2, Inside 4 normal, 3 sliding
Floor 2: Outside 0, Inside 9 normal, 1 sliding

Camera count (public rooms):
Floor 1
3 x Family/Dining/Kitchen
1 x Laundry
2 x Living room
2 x Garage
1 x Private Dining Room
1 x Study

Floor 2
1 x Activity Area
1 x Own bed room

###Securing the doors
- Installing door locks
  * 15 x 10 min
- Connecting the relay
  * 15 x 15 min
- Connecting the NFC module
  * 15 x 20 min
- Setting up the Wemos D1 mini
  * 15 x 20 min
- Adding the doors and NFC modules to home assistant
  * 30 x 4 min
- Setting up the NFC access cards 
  * 6 * 5 min
  
###Installing the cameras
- Flashing and configuring the firmware
  * 12 x 20 min
- Placing the cameras
  * 12 x 5 min
- Adding the cameras to home assistant
  * 12 x 5 min

Motion sensor count:
Floor 1
4 x Family/Dining/Kitchen
1 x Hallway
1 x Laundry
2 x Living room
2 x Garage
1 x Study room
1 x Entry

Floor 2
2 x Activity area
1 x Own bed room

###Installing motion sensors
- Connecting the motion sensor
  * 15 x 15 min
- Setting up the Wemos D1 mini
  * 15 x 20 min
- Installing the motion sensor
  * 15 x 10 min
- Adding the motion sensor to home assistant
  * 15 x 5 min

### Hardware
#### Doors
- Electrical Locks (10.50€)
  * Used to secure the doors
  * https://de.aliexpress.com/item/Stainless-Door-12V-DC-Fail-Safe-NO-Narrow-type-Door-Electric-Strike-Lock-For-Access-Control/32797143296.html

- Wemos D1 Mini (3.50€)
  * To control the locks
  * https://de.aliexpress.com/store/product/D1-mini-Mini-NodeMcu-4M-bytes-Lua-WIFI-Internet-of-Things-development-board-based-ESP8266/1331105_32529101036.html
  
- Wemos D1 Relay (1.80€)
  * To be able to plug the lock into the wemos
  * https://de.aliexpress.com/store/product/Relay-Shield-for-WeMos-D1-mini-button/1331105_32596395175.html

- NFC Module - MFRC522 (3.30€)
  * To read the cards to grant access
  * Works with the wemos
  * https://de.aliexpress.com/item/Compact-RFID-Reader-Writer-and-NFC-module-MFRC522-13-56MHz-Power-5V-3-3V-For-Arduino/32667518116.html

#### Motion Sensors 
- HC-SR501 (0.60€)
  * To automatically track presence in rooms, switch on lights, send notifications etc.
  * https://de.aliexpress.com/item/ree-Shipping-HC-SR501-Adjust-Infrared-IR-Pyroelectric-Infrared-PIR-module-Motion-Sensor-Detector-Module-We/32710944048.html

- Wemos D1 Mini (see 2017-06-15/hardware.md)

## Cameras
- Ip Camera - Xiaomi Yi 720p Camera (35.4€)
  * Connects to wifi
  * Streams via RTSP
  * Modified with custom firmware to be integrated into home assistant (allows RTSP, FTP & HTTP, no more cloud services)
  * Using the ffmpeg component
  * https://github.com/fritz-smh/yi-hack
  * https://de.aliexpress.com/item/Original-Xiaomi-Yi-Camera-Night-Vision-Smart-Wireless-Wifi-IP-Camera-720P-Video-Webcam-Black-for/32684248359.html

#### Smartphone Client
- Official web app
  * Can be added to homescreen
  * https://home-assistant.io/docs/frontend/mobile/

#### Cables
- Micro USB Cables - Aukey 5 pieces (5.80€)
  * To connect different devices (mainly wemos boards)
  * https://de.aliexpress.com/item/Aukey-5-Pack-Micro-USB-Cable-Fast-Charging-Adapter-5V2A-Data-Charger-Mobile-Phone-Cable-for/32637756862.html
  
- Pin Cables - 20 pieces (0.60€)
  * To connect different modules (NFC, motion sensors, etc.)
  * https://de.aliexpress.com/item/20pcs-20cm-2-54mm-1p-1p-Pin-Female-to-Female-Color-Breadboard-Cable-Jump-Wire-Jumper/32758834607.html


## Raspberry Pi camera
        * Connect camera to the Rapsberry Pi camera interface
        * Enable camera interface in the settings
        * Start settings with "sudo raspi-config"
        * Change the setting and save it
        * Activate the video driver for the camer with "sudo modprobe bcm2835-v4l2"
        * If this is not working do the command " sudo modprobe v4l2_common" first
        * Install motion for streaming and motion detection "sudo apt-get install motion"
        * For network streaming instead of localhost streaming, change the config file setting
          from "stream_localhost on" to "off" in the config file "/etc/motion/motion.conf"
        * Motion can be started with the command "sudo motion" and stopped with the command "sudo killall motion"

## Home Assistant
### Installation
        * Install home assistant with python pip command "pip3 install homeassistant"
        * After installation it can be started with the command "hass --open-ui"
        * The configuration file of the home assistant is under /home/<user>/.homeassistant

### Configuration
The configuration file of the home assistant is the "configuration.yaml" file. All devices should
placed there. I have used the keywords "lock", "sensor", "light" and "camera".
The following yaml code shows the configuration for the mqtt lock, the motion and sound sensors, light
and the camera from the Raspberry Pi which is streaming over the network with motion. The
first mqtt lines are for setting the mqtt server (broker).

'''yaml
mqtt:
   broker: 192.168.12.1
   client_id: home-assistant-gerald

lock:
  - platform: mqtt
    state_topic: "lock/relay"
    command_topic: "lock/relay/set"
    name: "MQTT Door Lock"
    payload_lock: "on"
    payload_unlock: "off"

sensor:
  - platform: mqtt
    state_topic: "sound/noise"
    name: "Noise Level"

  - platform: mqtt
    state_topic: "motion/sensor"
    name: "Motion Detection"

light:
  - platform: mqtt
    command_topic: "light/switch"

camera:
  - platform: mjpeg
    mjpeg_url: http://192.168.12.1:8081
    name: "Surveillance Camera"
'''

To define an automation in home assistant a trigger and a action is needed. This can be managed with the
web ui platform or directly in the configuration file for automations "automations.yaml".
The following yaml code shows the automation which toggles the light when motion is detected.

'''yaml
- action:
  - service: light.toggle
  alias: Motion Detection Light Toggle
  id: '1498162630044'
  trigger:
  - entity_id: sensor.motion_detection
    from: NDT
    platform: state
    to: DT
'''


# Home Automation Project 3
## Scenario
	* Airbnb room for rent
	* Landlord equip room with home automation system (HAS)
	* HAS should support the tenant (convinience)
	* Using fhem as home automation system

## Domains
### Security
	* Usb-Cam on RPi.
	* Motion sensor -> starts Cam when motion is detected
	* (Android App with stream)
	* Sound tracking for different rooms -> control different leds color (led strip),
	  maybe with partly simulators	

### Media Center
	* Kodi media system
	* Play movie --> turn down lights
	* (Play alarm sound --> when motion is detected)

### Remote Control
	* Turn on/off light remotly
	* Control ruby-led simulator via APP

### Energie Efficiency
	* Java-simulator/sensor sends temperature
	* When temp reaches a certain threshold turn on AC/turn on heat

## Script
* Telefon rings...
* Landlord answers phone, the tenant he knows from Airbnb arrived to his house and want to come in...
* [Button open door] Landlord opens the entry door.
* Landlord setup the client application for the tenant
* [Enter room door via app] connect to the server, and press the unlock button in the application.
* Tenant can enter the room.
* [Media start] press the media on button to start the movie. [trigger lights out] light will turn out.
* [Turn Light on via app] the tenant can turn off all lights or one by one via the application[ruby led simulator leds].
* [Temp simulator] reaches a certain level off temperature, if it reaches the AC starts
* [Camera] the tenant enters a room, the motion sensor detects the motion and the camer will be switched on
* [Turn Light off] the light will turned off because it is now late at night
* [Sound] the landlord watches the led strip which shows him the sound level of the 3 bed rooms
* [Sound] the tenant is very loud so his room will show a red led
* [Sound] the landlord goes to the tenant and tells him to be silent because it is after midnight




